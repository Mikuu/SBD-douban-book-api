{"count":3,"start":0,"total":1568,"books":[{"rating":{"max":10,"numRaters":246,"average":"9.1","min":0},"subtitle":"让繁琐工作自动化","author":["斯维加特 (Al Sweigart)"],"pubdate":"2016-7-1","tags":[{"count":448,"name":"Python","title":"Python"},{"count":207,"name":"编程","title":"编程"},{"count":149,"name":"python","title":"python"},{"count":142,"name":"计算机","title":"计算机"},{"count":84,"name":"入门","title":"入门"},{"count":71,"name":"自动化","title":"自动化"},{"count":34,"name":"Web及编程","title":"Web及编程"},{"count":32,"name":"计算机科学","title":"计算机科学"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29400403.jpg","binding":"平装","translator":[],"catalog":"第一部分Python编程基础\n第1章 Python基础 3\n1.1 在交互式环境中输入表达式 3\n1.2 整型、浮点型和字符串数据类型 6\n1.3 字符串连接和复制 6\n1.4 在变量中保存值 7\n1.4.1 赋值语句 7\n1.4.2 变量名 9\n1.5 第一个程序 9\n1.6 程序剖析 11\n1.6.1 注释 11\n1.6.2 print（）函数 11\n1.6.3 input（）函数 11\n1.6.4 打印用户的名字 12\n1.6.5 len（）函数 12\n1.6.6 str（）、int（）和float（）函数 13\n1.7 小结 15\n1.8 习题 15\n第2章 控制流 17\n2.1 布尔值 18\n2.2 比较操作符 19\n2.3 布尔操作符 20\n2.3.1 二元布尔操作符 20\n2.3.2 not操作符 21\n2.4 混合布尔和比较操作符 21\n2.5 控制流的元素 22\n2.5.1 条件 22\n2.5.2 代码块 22\n2.6 程序执行 23\n2.7 控制流语句 23\n2.7.1 if语句 23\n2.7.2 else语句 24\n2.7.3 elif语句 25\n2.7.4 while循环语句 30\n2.7.5 恼人的循环 31\n2.7.6 break语句 33\n2.7.7 continue语句 34\n2.7.8 for循环和range（）函数 37\n2.7.9 等价的while循环 39\n2.7.10 range（）的开始、停止和步长参数 39\n2.8 导入模块 40from import语句 41\n2.9 用sys.exit（）提前结束程序 41\n2.10 小结 41\n2.11 习题 41\n第3章 函数 43\n3.1 def语句和参数 44\n3.2 返回值和return语句 45\n3.3 None值 46\n3.4 关键字参数和print（）47\n3.5 局部和全局作用域 48\n3.5.1 局部变量不能在全局作用域内使用 48\n3.5.2 局部作用域不能使用其他局部作用域内的变量 49\n3.5.3 全局变量可以在局部作用域中读取 49\n3.5.4 名称相同的局部变量和全局变量 50\n3.6 global语句 50\n3.7 异常处理 52\n3.8 一个小程序：猜数字 54\n3.9 小结 55\n3.10 习题 56\n3.11 实践项目 56\n3.11.1 Collatz序列 56\n3.11.2 输入验证 57\n第4章 列表 59\n4.1 列表数据类型 59\n4.1.1 用下标取得列表中的单个值 60\n4.1.2 负数下标 61\n4.1.3 利用切片取得子列表 61\n4.1.4 用len（）取得列表的长度 62\n4.1.5 用下标改变列表中的值 62\n4.1.6 列表连接和列表复制 62\n4.1.7 用del语句从列表中删除值 63\n4.2 使用列表 63\n4.2.1 列表用于循环 64\n4.2.2 in和notin操作符 65\n4.2.3 多重赋值技巧 66\n4.3 增强的赋值操作 66\n4.4 方法 67\n4.4.1 用index（）方法在列表中查找值 67\n4.4.2 用append（）和insert（）方法在列表中添加值 68\n4.4.3 用remove（）方法从列表中删除值 69\n4.4.4 用sort（）方法将列表中的值排序 69\n4.5 例子程序：神奇8球和列表 70\n4.6 类似列表的类型：字符串和元组 71\n4.6.1 可变和不可变数据类型 72\n4.6.2 元组数据类型 73\n4.6.3 用list（）和tuple（）函数来转换类型 74\n4.7 引用 75\n4.7.1 传递引用 76\n4.7.2 copy模块的copy（）和deepcopy（）函数 77\n4.8 小结 78\n4.9 习题 78\n4.10 实践项目 79\n4.10.1 逗号代码 79\n4.10.2 字符图网格 79\n第5章 字典和结构化数据 81\n5.1 字典数据类型 81\n5.1.1 字典与列表 82\n5.1.2 keys（）、values（）和items（）方法 83\n5.1.3 检查字典中是否存在键或值 84\n5.1.4 get（）方法 84\n5.1.5 setdefault（）方法 85\n5.2 漂亮打印 86\n5.3 使用数据结构对真实世界建模 87\n5.3.1 井字棋盘 88\n5.3.2 嵌套的字典和列表 91\n5.4 小结 92\n5.5 习题 93\n5.6 实践项目 93\n5.6.1 好玩游戏的物品清单 93\n5.6.2 列表到字典的函数，针对好玩游戏物品清单 94\n第6章 字符串操作 95\n6.1 处理字符串 95\n6.1.1 字符串字面量 95\n6.1.2 双引号 96\n6.1.3 转义字符 96\n6.1.4 原始字符串 96\n6.1.5 用三重引号的多行字符串 97\n6.1.6 多行注释 97\n6.1.7 字符串下标和切片 98\n6.1.8 字符串的in和notin操作符 98\n6.2 有用的字符串方法 99\n6.2.1 字符串方法upper（）、lower（）、isupper（）和islower（）99\n6.2.2 isX字符串方法 100\n6.2.3 字符串方法startswith（）和endswith（）102\n6.2.4 字符串方法join（）和split（）102\n6.2.5 用rjust（）、ljust（）和center（）方法对齐文本 103\n6.2.6 用strip（）、rstrip（）和lstrip（）删除空白字符 104\n6.2.7 用pyperclip模块拷贝粘贴字符串 105\n6.3 项目：口令保管箱 106\n第1步：程序设计和数据结构 106\n第2步：处理命令行参数 106\n第3步：复制正确的口令 107\n6.4 项目：在Wiki标记中添加无序列表 108\n第1步：从剪贴板中复制和粘贴 108\n第2步：分离文本中的行，并添加星号 109\n第3步：连接修改过的行 109\n6.5 小结 110\n6.6 习题 110\n6.7 实践项目 111\n表格打印 111\n第二部分 自动化任务\n第7章 模式匹配与正则表达式 115\n7.1 不用正则表达式来查找文本模式 116\n7.2 用正则表达式查找文本模式 117\n7.2.1 创建正则表达式对象 118\n7.2.2 匹配Regex对象 118\n7.2.3 正则表达式匹配复习 119\n7.3 用正则表达式匹配更多模式 119\n7.3.1 利用括号分组 119\n7.3.2 用管道匹配多个分组 120\n7.3.3 用问号实现可选匹配 121\n7.3.4 用星号匹配零次或多次 121\n7.3.5 用加号匹配一次或多次 122\n7.3.6 用花括号匹配特定次数 122\n7.4 贪心和非贪心匹配 123\n7.5 findall（）方法 124\n7.6 字符分类 124\n7.7 建立自己的字符分类 125\n7.8 插入字符和美元字符 126\n7.9 通配字符 126\n7.9.1 用点—星匹配所有字符 127\n7.9.2 用句点字符匹配换行 127\n7.10 正则表达式符号复习 128\n7.11 不区分大小写的匹配 128\n7.12 用sub（）方法替换字符串 129\n7.13 管理复杂的正则表达式 129\n7.14 组合使用re.IGNORECASE、re.DOTALL和re.VERBOSE 130\n7.15 项目：电话号码和Email地址提取程序 130\n第1步：为电话号码创建一个正则表达式 131\n第2步：为email地址创建一个正则表达式 132\n第3步：在剪贴板文本中找到所有匹配 132\n第4步：所有匹配连接成一个字符串，复制到剪贴板 133\n第5步：运行程序 133\n第6步：类似程序的构想 134\n7.16 小结 134\n7.17 习题 134\n7.18 实践项目 136\n7.18.1 强口令检测 136\n7.18.2 strip（）的正则表达式版本 136\n第8章 读写文件 137\n8.1 文件与文件路径 137\n8.1.1 Windows上的倒斜杠以及OS X和Linux上的正斜杠 138\n8.1.2 当前工作目录 139\n8.1.3 绝对路径与相对路径 139\n8.1.4 用os.makedirs（）创建新文件夹 140\n8.1.5 os.path模块 140\n8.1.6 处理绝对路径和相对路径 141\n8.1.7 查看文件大小和文件夹内容 142\n8.1.8 检查路径有效性 143\n8.2 文件读写过程 144\n8.2.1 用open（）函数打开文件 145\n8.2.2 读取文件内容 145\n8.2.3 写入文件 146\n8.3 用shelve模块保存变量 147\n8.4 用pprint.pformat（）函数保存变量 148\n8.5 项目：生成随机的测验试卷文件 149\n第1步：将测验数据保存在一个字典中 149\n第2步：创建测验文件，并打乱问题的次序 150\n第3步：创建答案选项 151\n第4步：将内容写入测验试卷和答案文件 151\n8.6 项目：多重剪贴板 153\n第1步：注释和shelf设置 153\n第2步：用一个关键字保存剪贴板内容 154\n第3步：列出关键字和加载关键字的内容 154\n8.7 小结 155\n8.8 习题 155\n8.9 实践项目 156\n8.9.1 扩展多重剪贴板 156\n8.9.2 疯狂填词 156\n8.9.3 正则表达式查找 156\n第9章 组织文件 157\n9.1 shutil模块 158\n9.1.1 复制文件和文件夹 158\n9.1.2 文件和文件夹的移动与改名 158\n9.1.3 永久删除文件和文件夹 160\n9.1.4 用send2trash模块安全地删除 160\n9.2 遍历目录树 161\n9.7 用zipfile模块压缩文件 162\n9.3.1 读取ZIP文件 163\n9.3.2 从ZIP文件中解压缩 164\n9.3.3 创建和添加到ZIP文件 164\n9.4 项目：将带有美国风格日期的文件改名为欧洲风格日期 165\n第1步：为美国风格的日期创建一个正则表达式 165\n第2步：识别文件名中的日期部分 166\n第3步：构成新文件名，并对文件改名 167\n第4步：类似程序的想法 168\n9.5 项目：将一个文件夹备份到一个ZIP文件 168\n第1步：弄清楚ZIP文件的名称 168\n第2步：创建新ZIP文件 169\n第3步：遍历目录树并添加到ZIP文件。170\n第4步：类似程序的想法 170\n9.6 小结 171\n9.7 习题 171\n9.8 实践项目 171\n9.8.1 选择性拷贝 171\n9.8.2 删除不需要的文件 172\n9.8.3 消除缺失的编号 172\n第10章 调试 173\n10.1 抛出异常 174\n10.2 取得反向跟踪的字符串 175\n10.3 断言 176\n10.3.1 在交通灯模拟中使用断言 177\n10.3.2 禁用断言 178\n10.4 日志 178\n10.4.1 使用日志模块 178\n10.4.2 不要用print（）调试 180\n10.4.3 日志级别 180\n10.4.4 禁用日志 181\n10.4.5 将日志记录到文件 182\n10.5 IDLE的调试器 182\n10.5.1 Go 183\n10.5.2 Step 183\n10.5.3 Over 183\n10.5.4 Out 183\n10.5.5 Quit 183\n10.5.6 调试一个数字相加的程序 184\n10.5.7 断点 185\n10.6 小结 187\n10.7 习题 187\n10.7 实践项目 188\n调试硬币抛掷 188\n第11章 从Web抓取信息 189\n11.1 项目：利用webbrowser模块的mapIt.py 190\n第1步：弄清楚URL 190\n第2步：处理命令行参数 191\n第3步：处理剪贴板内容，加载浏览器 191\n第4步：类似程序的想法 192\n11.2 用requests模块从Web下载文件 192\n11.2.1 用requests.get（）函数下载一个网页 193\n11.2.2 检查错误 193\n10.3 将下载的文件保存到硬盘 194\n10.4 HTML 195\n10.4.1 学习HTML的资源 195\n10.4.2 快速复习 195\n10.4.3 查看网页的HTML源代码 196\n10.4.4 打开浏览器的开发者工具 197\n10.4.5 使用开发者工具来寻找HTML元素 198\n10.5 用BeautifulSoup模块解析HTML 199\n10.5.1 从HTML创建一个BeautifulSoup对象 200\n10.5.2 用select（）方法寻找元素 200\n10.5.3 通过元素的属性获取数据 202\n10.6 项目：“I’mFeelingLucky”Google查找 202\n第1步：获取命令行参数，并请求查找页面 203\n第2步：找到所有的结果 203第3步：针对每个结果打开Web浏览器 204\n第4步：类似程序的想法 205\n10.7 项目：下载所有XKCD漫画 205\n第1步：设计程序 206\n第2步：下载网页 207\n第3步：寻找和下载漫画图像 207\n第4步：保存图像，找到前一张漫画 208\n第4步：类似程序的想法 209\n10.8 用selenium模块控制浏览器 210\n10.8.1 启动selenium控制的浏览器 210\n10.8.2 在页面中寻找元素 211\n10.8.3 点击页面 212\n10.8.4 填写并提交表单 212\n10.8.5 发送特殊键 213\n10.8.6 点击浏览器按钮 213\n10.8.7 关于selenium的更多信息 214\n10.9 小结 214\n10.10 习题 214\n10.11 实践项目 215\n10.11.1 命令行邮件程序 215\n10.11.2 图像网站下载 215\n10.11.32048215\n10.11.4 链接验证 215\n第12章 处理Excel电子表格 217\n12.1 Excel文档 217\n12.2 安装openpyxl模块 218\n12.3 读取Excel文档 218\n12.3.1 用openpyxl模块打开Excel文档 219\n12.3.2 从工作簿中取得工作表 219\n12.3.3 从表中取得单元格 220\n12.3.4 列字母和数字之间的转换 221\n12.3.5 从表中取得行和列 222\n12.3.6 工作薄、工作表、单元格 223\n12.4 项目：从电子表格中读取数据 223\n第1步：读取电子表格数据 224\n第2步：填充数据结构 225\n第3步：将结果写入文件 226\n第4步：类似程序的思想 227\n12.5 写入Excel文档 227\n12.5.1 创建并保存Excel文档 227\n12.5.2 创建和删除工作表 228\n12.5.3 将值写入单元格 229\n12.6 项目：更新一个电子表格 229\n第1步：利用更新信息建立数据结构 230\n第2步：检查所有行，更新不正确的价格 231\n第4步：类似程序的思想 231\n12.7 设置单元格的字体风格 232\n12.8 Font对象 232\n12.9 公式 234\n12.10 调整行和列 235\n12.10.1 设置行高和列宽 235\n12.10.2 合并和拆分单元格 236\n12.10.3 冻结窗格 237\n12.10.4 图表 238\n12.11 小结 240\n12.11 习题 240\n12.12 实践项目 241\n12.12.1 乘法表 241\n12.12.2 空行插入程序 241\n12.12.3 电子表格单元格翻转程序 242\n12.12.4 文本文件到电子表格 242\n12.12.5 电子表格到文本文件 242\n第13章 处理PDF和Word文档 243\n13.1 PDF文档 243\n13.1.1 从PDF提取文本 244\n13.1.2 解密PDF 245\n13.1.3 创建PDF 246\n13.1.4 拷贝页面 246\n13.1.5 旋转页面 247\n13.1.6 叠加页面 248\n13.1.7 加密PDF 249\n13.2 项目：从多个PDF中合并选择的页面 250\n第1步：找到所有PDF文件 250\n第2步：打开每个PDF文件 251\n第3步：添加每一页 252\n第4步：保存结果 252\n第5步：类似程序的想法 253\n13.3 Word文档 253\n13.3.1 读取Word文档 254\n13.3.2 从.docx文件中取得完整的文本 254\n13.3.3 设置Paragraph和Run对象的样式 255\n13.3.4 创建带有非默认样式的Word文档 257\n13.3.5 Run属性 257\n13.3.6 写入Word文档 258\n13.3.7 添加标题 260\n13.3.8 添加换行符和换页符 261\n13.3.9 添加图像 261\n13.4 小结 262\n13.5 习题 262\n13.6 实践项目 263\n13.6.1 PDF偏执狂 263\n13.6.2 定制邀请函，保存为Word文档 263\n13.6.3 暴力PDF口令破解程序 264\n第14章 处理CSV文件和JSON数据 265\n14.1 csv模块 265\n14.2.1 Reader对象 266\n14.2.2 在for循环中，从Reader对象读取数据 267\n14.2.3 Writer对象 268\n14.2.4 delimiter和lineterminator关键字参数 269\n14.3 项目：从CSV文件中删除表头 269\n第1步：循环遍历每个CSV文件 270\n第2步：读入CSV文件 270\n第3步：写入CSV文件，没有\n第一行 271\n第4步：类似程序的想法 272\n14.4 JSON和API 272\n14.5 json模块 273\n14.5.1 用loads（）函数读取\nJSON 273\n14.5.2 用dumps函数写出\nJSON 273\n14.6 项目：取得当前的天气数据 274\n第1步：从命令行参数获取位置 274\n第2步：下载JSON数据 275\n第3步：加载JSON数据并打印天气 275\n第4步：类似程序的想法 277\n14.7 小结 277\n14.8 习题 277\n14.9 实践项目 277\nExcel到CSV的转换程序 277\n第15章 保持时间、计划任务和启动程序 279\n15.1 time模块 279\n15.1.1 time.time（）函数 279\n15.1.2 time.sleep（）函数 280\n15.2 数字四舍五入 281\n15.3 项目：超级秒表 282\n第1步：设置程序来记录时间 282\n第2步：记录并打印单圈时间 283\n第4步：类似程序的想法 283\n15.4 datetime模块 284\n15.4.1 timedelta数据类型 285\n15.4.2 暂停直至特定日期 286\n15.4.3 将datetime对象转换为字符串 287\n15.4.4 将字符串转换成datetime对象 288\n15.5 回顾Python的时间函数 288\n15.6 多线程 289\n15.6.1 向线程的目标函数传递参数 290\n15.6.2 并发问题 291\n15.7 项目：多线程XKCD下载程序 291\n第1步：修改程序以使用函数 292\n第2步：创建并启动线程 293\n第3步：等待所有线程结束 293\n15.8 从Python启动其他程序 294\n15.8.1 向Popen（）传递命令行参数 295\n15.8.2 TaskScheduler、launchd和\ncron 296\n15.8.3 用Python打开网站 296\n15.8.4 运行其他Python脚本 296\n15.8.5 用默认的应用程序打开文件 297\n15.9 项目：简单的倒计时程序 298\n第1步：倒计时 298\n第2步：播放声音文件 298\n第3步：类似程序的想法 299\n15.10 小结 299\n15.11 习题 300\n15.12 实践项目 300\n15.12.1 美化的秒表 300\n15.12.2 计划的Web漫画下载 301\n第16章 发送电子邮件和短信 303\n16.1 SMTP 303\n16.2 发送电子邮件 304\n16.2.1 连接到SMTP服务器 304\n16.2.2 发送SMTP的“Hello”消息 305\n16.2.3 开始TLS加密 306\n16.2.4 登录到SMTP服务器 306\n16.2.5 发送电子邮件 306\n16.2.6 从SMTP服务器断开 307\n16.3 IMAP 307\n16.4 用IMAP获取和删除电子邮件 307\n16.4.1 连接到IMAP服务器 308\n16.4.2 登录到IMAP服务器 309\n16.4.3 搜索电子邮件 309\n16.4.4 选择文件夹 309\n16.4.5 执行搜索 310\n16.4.6 大小限制 312\n16.4.7 取邮件并标记为已读 312\n16.4.8 从原始消息中获取电子邮件地址 313\n16.4.9 从原始消息中获取正文 314\n16.4.10 删除电子邮件 315\n16.4.11 从IMAP服务器断开 315\n16.5 项目：向会员发送会费提醒电子邮件 316\n第1步：打开Excel文件 316\n第2步：查找所有未付成员 317\n第3步：发送定制的电子邮件提醒 318\n16.6 用Twilio发送短信 319\n16.6.1 注册Twilio账号 319\n16.6.2 发送短信 320\n16.7 项目：“只给我发短信”模块 321\n16.8 小结 322\n16.9 习题 323\n16.10 实践项目 323\n16.10.1 随机分配家务活的电子邮件程序 323\n16.10.2 伞提醒程序 324\n16.10.3 自动退订 324\n16.10.4 通过电子邮件控制你的电脑 324\n第17章 操作图像 327\n17.1 计算机图像基础 327\n17.1.1 颜色和RGBA值 328\n17.1.2 坐标和Box元组 329\n17.2 用Pillow操作图像 330\n17.2.1 处理Image数据类型 331\n17.2.2 裁剪图片 332\n17.2.3 复制和粘贴图像到其他图像 333\n17.2.4 调整图像大小 335\n17.2.5 旋转和翻转图像 336\n17.2.6 更改单个像素 338\n17.3 项目：添加徽标 339\n第1步：打开徽标图像 340\n第2步：遍历所有文件并打开图像 341\n第3步：调整图像的大小 341\n第4步：添加徽标，并保存更改 342\n第5步：类似程序的想法 343\n17.4 在图像上绘画 344\n17.4.1 绘制形状 344\n17.4.2 绘制文本 346\n17.5 小结 347\n17.6 习题 348\n17.7 实践项目 348\n17.7.1 扩展和修正本章项目的程序 348\n17.7.2 在硬盘上识别照片文件夹 349\n17.7.3 定制的座位卡 350\n第18章 用GUI自动化控制键盘和鼠标 351\n18.1 安装pyautogui模块 351\n18.2 走对路 352\n18.2.1 通过注销关闭所有程序 352\n18.2.2 暂停和自动防故障装置 352\n18.3 控制鼠标移动 353\n18.3.1 移动鼠标 354\n18.3.2 获取鼠标位置 354\n18.4 项目：“现在鼠标在哪里？”355\n第1步：导入模块 355\n第2步：编写退出代码和无限循环 355\n第3步：获取并打印鼠标坐标。356\n18.5 控制鼠标交互 357\n18.5.1 点击鼠标 357\n18.5.2 拖动鼠标 357\n18.5.3 滚动鼠标 359\n18.6 处理屏幕 360\n18.6.1 获取屏幕快照 360\n18.6.2 分析屏幕快照 360\n18.7 项目：扩展mouseNow程序 361\n18.8 图像识别 362\n18.9 控制键盘 363\n18.9.1 通过键盘发送一个字符串 363\n18.9.2 键名 364\n18.9.3 按下和释放键盘 365\n18.9.4 热键组合 365\n18.10 复习PyAutoGUI的函数 366\n18.11 项目：自动填表程序 367\n第1步：弄清楚步骤 368\n第2步：建立坐标 368\n第3步：开始键入数据 370\n第4步：处理选择列表和单选按钮 371\n第5步：提交表单并等待 372\n18.12 小结 372\n18.13 习题 373\n18.14 实践项目 373\n18.14.1 看起来很忙 373\n18.14.2 即时通信机器人 373\n18.14.3 玩游戏机器人指南 374\n附录A 安装第三方模块 375\n附录B 运行程序 377\n附录C 习题答案 381","pages":"390","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s29400403.jpg","large":"https://img3.doubanio.com\/lpic\/s29400403.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s29400403.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26836700\/","id":"26836700","publisher":"人民邮电出版社","isbn10":"7115422699","isbn13":"9787115422699","title":"Python编程快速上手","url":"https:\/\/api.douban.com\/v2\/book\/26836700","alt_title":"","author_intro":"Al Sweigart 是一名软件开发者，还教小孩和成人编程。他为初学者写了几本Python 书籍，包括《Python 密码学编程》、《Python 游戏编程快速上手》和《Python 和Pygame 游戏开发指南》。","summary":"如今，人们面临的大多数任务都可以通过编写计算机软件来完成。Python是一种解释型、面向对象、动态数据类型的高级程序设计语言。通过Python编程，我们能够解决现实生活中的很多任务。\n本书是一本面向实践的Python编程实用指南。本书的目的，不仅是介绍Python语言的基础知识，而且还通过项目实践教会读者如何应用这些知识和技能。本书的首部分介绍了基本Python编程概念，第二部分介绍了一些不同的任务，通过编写Python程序，可以让计算机自动完成它们。第二部分的每一章都有一些项目程序，供读者学习。每章的末尾还提供了一些习题和深入的实践项目，帮助读者巩固所学的知识。附录部分提供了所有习题的解答。\n本书适合任何想要通过Python学习编程的读者，尤其适合缺乏编程基础的初学者。通过阅读本书，读者将能利用强大的编程语言和工具，并且会体会到Python编程的快乐。","price":"CNY 69.00"},{"rating":{"max":10,"numRaters":524,"average":"9.1","min":0},"subtitle":"从入门到实践","author":["[美]埃里克·马瑟斯"],"pubdate":"2016-7-1","tags":[{"count":767,"name":"Python","title":"Python"},{"count":459,"name":"编程","title":"编程"},{"count":316,"name":"python","title":"python"},{"count":276,"name":"计算机","title":"计算机"},{"count":275,"name":"入门","title":"入门"},{"count":111,"name":"Programming","title":"Programming"},{"count":106,"name":"IT","title":"IT"},{"count":85,"name":"软件开发","title":"软件开发"}],"origin_title":"Python Crash Course","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28891775.jpg","binding":"平装","translator":["袁国忠"],"catalog":"第一部分　基础知识\n第1章　起步　　2\n1.1　搭建编程环境　　2\n1.1.1　Python 2和Python 3　　2\n1.1.2　运行Python代码片段　　3\n1.1.3　Hello World程序　　3\n1.2　在不同操作系统中搭建Python编程环境　　3\n1.2.1　在Linux系统中搭建Python编程环境　　3\n1.2.2　在OS X系统中搭建Python编程环境　　6\n1.2.3　在Windows系统中搭建Python编程环境　　8\n1.3　解决安装问题　　12\n1.4　从终端运行Python程序　　13\n1.4.1　在Linux和OS X系统中从终端运行Python程序　　13\n1.4.2　在Windows系统中从终端运行Python程序　　13\n1.5　小结　　14\n第2章　变量和简单数据类型　　15\n2.1　运行hello_world.py时发生的情况　　15\n2.2　变量　　16\n2.2.1　变量的命名和使用　　16\n2.2.2　使用变量时避免命名错误　　17\n2.3　字符串　　18\n2.3.1　使用方法修改字符串的大小写　　19\n2.3.2　合并（拼接）字符串　　19\n2.3.3　使用制表符或换行符来添加空白　　20\n2.3.4　删除空白　　21\n2.3.5　使用字符串时避免语法错误　　22\n2.3.6　Python 2中的print语句　　23\n2.4　数字　　24\n2.4.1　整数　　24\n2.4.2　浮点数　　25\n2.4.3　使用函数str()避免类型错误　　25\n2.4.4　Python 2中的整数　　26\n2.5　注释　　27\n2.5.1　如何编写注释　　27\n2.5.2　该编写什么样的注释　　28\n2.6　Python之禅　　28\n2.7　小结　　30\n第3章　列表简介　　31\n3.1　列表是什么　　31\n3.1.1　访问列表元素　　32\n3.1.2　索引从0而不是1开始　　32\n3.1.3　使用列表中的各个值　　33\n3.2　修改、添加和删除元素　　33\n3.2.1　修改列表元素　　34\n3.2.2　在列表中添加元素　　34\n3.2.3　从列表中删除元素　　35\n3.3　组织列表　　39\n3.3.1　使用方法sort()对列表进行永久性排序　　39\n3.3.2　使用函数sorted()对列表进行临时排序　　40\n3.3.3　倒着打印列表　　41\n3.3.4　确定列表的长度　　41\n3.4　使用列表时避免索引错误　　42\n3.5　小结　　43\n第4章　操作列表　　44\n4.1　遍历整个列表　　44\n4.1.1　深入地研究循环　　45\n4.1.2　在for循环中执行更多的操作　　46\n4.1.3　在for循环结束后执行一些操作　　47\n4.2　避免缩进错误　　47\n4.2.1　忘记缩进　　48\n4.2.2　忘记缩进额外的代码行　　48\n4.2.3　不必要的缩进　　49\n4.2.4　循环后不必要的缩进　　49\n4.2.5　遗漏了冒号　　50\n4.3　创建数值列表　　51\n4.3.1　使用函数range()　　51\n4.3.2　使用range()创建数字列表　　51\n4.3.3　对数字列表执行简单的统计计算　　53\n4.3.4　列表解析　　53\n4.4　使用列表的一部分　　54\n4.4.1　切片　　54\n4.4.2　遍历切片　　56\n4.4.3　复制列表　　56\n4.5　元组　　59\n4.5.1　定义元组　　59\n4.5.2　遍历元组中的所有值　　59\n4.5.3　修改元组变量　　60\n4.6　设置代码格式　　61\n4.6.1　格式设置指南　　61\n4.6.2　缩进　　61\n4.6.3　行长　　61\n4.6.4　空行　　62\n4.6.5　其他格式设置指南　　62\n4.7　小结　　63\n第5章　if语句　　64\n5.1　一个简单示例　　64\n5.2　条件测试　　65\n5.2.1　检查是否相等　　65\n5.2.2　检查是否相等时不考虑大小写　　65\n5.2.3　检查是否不相等　　66\n5.2.4　比较数字　　67\n5.2.5　检查多个条件　　67\n5.2.6　检查特定值是否包含在列表中　　68\n5.2.7　检查特定值是否不包含在列表中　　69\n5.2.8　布尔表达式　　69\n5.3　if语句　　70\n5.3.1　简单的if语句　　70\n5.3.2　if-else语句　　71\n5.3.3　if-elif-else结构　　72\n5.3.4　使用多个elif代码块　　73\n5.3.5　省略else代码块　　74\n5.3.6　测试多个条件　　74\n5.4　使用if语句处理列表　　76\n5.4.1　检查特殊元素　　77\n5.4.2　确定列表不是空的　　78\n5.4.3　使用多个列表　　78\n5.5　设置if语句的格式　　80\n5.6　小结　　80\n第6章　字典　　81\n6.1　一个简单的字典　　81\n6.2　使用字典　　82\n6.2.1　访问字典中的值　　82\n6.2.2　添加键—值对　　83\n6.2.3　先创建一个空字典　　83\n6.2.4　修改字典中的值　　84\n6.2.5　删除键—值对　　85\n6.2.6　由类似对象组成的字典　　86\n6.3　遍历字典　　87\n6.3.1　遍历所有的键—值对　　87\n6.3.2　遍历字典中的所有键　　89\n6.3.3　按顺序遍历字典中的所有键　　91\n6.3.4　遍历字典中的所有值　　91\n6.4　嵌套　　93\n6.4.1　字典列表　　93\n6.4.2　在字典中存储列表　　95\n6.4.3　在字典中存储字典　　97\n6.5　小结　　99\n第7章　用户输入和while循环　　100\n7.1　函数input()的工作原理　　100\n7.1.1　编写清晰的程序　　101\n7.1.2　使用int()来获取数值输入　　102\n7.1.3　求模运算符　　103\n7.1.4　在Python 2.7中获取输入　　104\n7.2　while循环简介　　104\n7.2.1　使用while循环　　104\n7.2.2　让用户选择何时退出　　105\n7.2.3　使用标志　　106\n7.2.4　使用break退出循环　　107\n7.2.5　在循环中使用continue　　108\n7.2.6　避免无限循环　　109\n7.3　使用while循环来处理列表和字典　　110\n7.3.1　在列表之间移动元素　　110\n7.3.2　删除包含特定值的所有列表元素　　111\n7.3.3　使用用户输入来填充字典　　112\n7.4　小结　　113\n第8章　函数　　114\n8.1　定义函数　　114\n8.1.1　向函数传递信息　　115\n8.1.2　实参和形参　　115\n8.2　传递实参　　116\n8.2.1　位置实参　　116\n8.2.2　关键字实参　　118\n8.2.3　默认值　　118\n8.2.4　等效的函数调用　　119\n8.2.5　避免实参错误　　120\n8.3　返回值　　121\n8.3.1　返回简单值　　121\n8.3.2　让实参变成可选的　　122\n8.3.3　返回字典　　123\n8.3.4　结合使用函数和while循环　　124\n8.4　传递列表　　126\n8.4.1　在函数中修改列表　　126\n8.4.2　禁止函数修改列表　　129\n8.5　传递任意数量的实参　　130\n8.5.1　结合使用位置实参和任意数量实参　　131\n8.5.2　使用任意数量的关键字实参　　131\n8.6　将函数存储在模块中　　133\n8.6.1　导入整个模块　　133\n8.6.2　导入特定的函数　　134\n8.6.3　使用as给函数指定别名　　134\n8.6.4　使用as给模块指定别名　　135\n8.6.5　导入模块中的所有函数　　135\n8.7　函数编写指南　　136\n8.8　小结　　137\n第9章　类　　138\n9.1　创建和使用类　　138\n9.1.1　创建Dog类　　139\n9.1.2　根据类创建实例　　140\n9.2　使用类和实例　　142\n9.2.1　Car类　　143\n9.2.2　给属性指定默认值　　143\n9.2.3　修改属性的值　　144\n9.3　继承　　147\n9.3.1　子类的方法__init__()　　147\n9.3.2　Python 2.7中的继承　　149\n9.3.3　给子类定义属性和方法　　149\n9.3.4　重写父类的方法　　150\n9.3.5　将实例用作属性　　150\n9.3.6　模拟实物　　152\n9.4　导入类　　153\n9.4.1　导入单个类　　153\n9.4.2　在一个模块中存储多个类　　155\n9.4.3　从一个模块中导入多个类　　156\n9.4.4　导入整个模块　　157\n9.4.5　导入模块中的所有类　　157\n9.4.6　在一个模块中导入另一个模块　　157\n9.4.7　自定义工作流程　　158\n9.5　Python标准库　　159\n9.6　类编码风格　　161\n9.7　小结　　161\n第10章　文件和异常　　162\n10.1　从文件中读取数据　　162\n10.1.1　读取整个文件　　162\n10.1.2　文件路径　　164\n10.1.3　逐行读取　　165\n10.1.4　创建一个包含文件各行内容的列表　　166\n10.1.5　使用文件的内容　　166\n10.1.6　包含一百万位的大型文件　　168\n10.1.7　圆周率值中包含你的生日吗　　168\n10.2　写入文件　　169\n10.2.1　写入空文件　　170\n10.2.2　写入多行　　170\n10.2.3　附加到文件　　171\n10.3　异常　　172\n10.3.1　处理ZeroDivisionError异常　　172\n10.3.2　使用try-except 代码块　　173\n10.3.3　使用异常避免崩溃　　173\n10.3.4　else 代码块　　174\n10.3.5　处理FileNotFoundError异常　　175\n10.3.6　分析文本　　176\n10.3.7　使用多个文件　　177\n10.3.8　失败时一声不吭　　178\n10.3.9　决定报告哪些错误　　179\n10.4　存储数据　　180\n10.4.1　使用json.dump()和json.load()　　180\n10.4.2　保存和读取用户生成的数据　　181\n10.4.3　重构　　183\n10.5　小结　　186\n第11章　测试代码　　187\n11.1　测试函数　　187\n11.1.1　单元测试和测试用例　　188\n11.1.2　可通过的测试　　188\n11.1.3　不能通过的测试　　190\n11.1.4　测试未通过时怎么办　　191\n11.1.5　添加新测试　　191\n11.2　测试类　　193\n11.2.1　各种断言方法　　193\n11.2.2　一个要测试的类　　194\n11.2.3　测试AnonymousSurvey类　　195\n11.2.4　方法setUp()　　197\n11.3　小结　　199\n第二部分　项 目\n项目1 外星人入侵　　202\n第12章　武装飞船　　203\n12.1　规划项目　　203\n12.2　安装Pygame　　204\n12.2.1　使用pip安装Python包　　204\n12.2.2　在Linux系统中安装Pygame　　206\n12.2.3　在OS X系统中安装Pygame　　207\n12.2.4　在Windows系统中安装Pygame　　207\n12.3　开始游戏项目　　207\n12.3.1　创建Pygame窗口以及响应用户输入　　208\n12.3.2　设置背景色　　209\n12.3.3　创建设置类　　210\n12.4　添加飞船图像　　211\n12.4.1　创建Ship类　　212\n12.4.2　在屏幕上绘制飞船　　213\n12.5　重构：模块game_functions　　214\n12.5.1　函数check_events()　　214\n12.5.2　函数update_screen()　　215\n12.6　驾驶飞船　　216\n12.6.1　响应按键　　216\n12.6.2　允许不断移动　　217\n12.6.3　左右移动　　219\n12.6.4　调整飞船的速度　　220\n12.6.5　限制飞船的活动范围　　221\n12.6.6　重构check_events()　　222\n12.7　简单回顾　　223\n12.7.1　alien_invasion.py　　223\n12.7.2　settings.py　　223\n12.7.3　game_functions.py　　223\n12.7.4　ship.py　　223\n12.8　射击　　224\n12.8.1　添加子弹设置　　224\n12.8.2　创建Bullet类　　224\n12.8.3　将子弹存储到编组中　　226\n12.8.4　开火　　227\n12.8.5　删除已消失的子弹　　228\n12.8.6　限制子弹数量　　229\n12.8.7　创建函数update_bullets()　　229\n12.8.8　创建函数fire_bullet()　　230\n12.9　小结　　231\n第13章　外星人　　232\n13.1　回顾项目　　232\n13.2　创建第一个外星人　　233\n13.2.1　创建Alien类　　233\n13.2.2　创建Alien实例　　234\n13.2.3　让外星人出现在屏幕上　　235\n13.3　创建一群外星人　　236\n13.3.1　确定一行可容纳多少个外星人　　236\n13.3.2　创建多行外星人　　236\n13.3.3　创建外星人群　　237\n13.3.4　重构create_fleet()　　239\n13.3.5　添加行　　240\n13.4　让外星人群移动　　242\n13.4.1　向右移动外星人　　243\n13.4.2　创建表示外星人移动方向的设置　　244\n13.4.3　检查外星人是否撞到了屏幕边缘　　244\n13.4.4　向下移动外星人群并改变移动方向　　245\n13.5　射杀外星人　　246\n13.5.1　检测子弹与外星人的碰撞　　246\n13.5.2　为测试创建大子弹　　247\n13.5.3　生成新的外星人群　　248\n13.5.4　提高子弹的速度　　249\n13.5.5　重构update_bullets()　　249\n13.6　结束游戏　　250\n13.6.1　检测外星人和飞船碰撞　　250\n13.6.2　响应外星人和飞船碰撞　　251\n13.6.3　有外星人到达屏幕底端　　254\n13.6.4　游戏结束　　255\n13.7　确定应运行游戏的哪些部分　　255\n13.8　小结　　256\n第14章　记分　　257\n14.1　添加Play 按钮　　257\n14.1.1　创建Button类　　258\n14.1.2　在屏幕上绘制按钮　　259\n14.1.3　开始游戏　　261\n14.1.4　重置游戏　　261\n14.1.5　将Play 按钮切换到非活动状态　　263\n14.1.6　隐藏光标　　263\n14.2　提高等级　　264\n14.2.1　修改速度设置　　264\n14.2.2　重置速度　　266\n14.3　记分　　267\n14.3.1　显示得分　　267\n14.3.2　创建记分牌　　268\n14.3.3　在外星人被消灭时更新得分　　270\n14.3.4　将消灭的每个外星人的点数都计入得分　　271\n14.3.5　提高点数　　271\n14.3.6　将得分圆整　　272\n14.3.7　最高得分　　274\n14.3.8　显示等级　　276\n14.3.9　显示余下的飞船数　　279\n14.4　小结　　283\n项目2 数据可视化　　284\n第15章　生成数据　　285\n15.1　安装matplotlib　　285\n15.1.1　在Linux系统中安装matplotlib　　286\n15.1.2　在OS X系统中安装matplotlib　　286\n15.1.3　在Windows系统中安装matplotlib　　286\n15.1.4　测试matplotlib　　287\n15.1.5　matplotlib画廊　　287\n15.2　绘制简单的折线图　　287\n15.2.1　修改标签文字和线条粗细　　288\n15.2.2　校正图形　　289\n15.2.3　使用scatter()绘制散点图并设置其样式　　290\n15.2.4　使用scatter()绘制一系列点　　291\n15.2.5　自动计算数据　　292\n15.2.6　删除数据点的轮廓　　293\n15.2.7　自定义颜色　　293\n15.2.8　使用颜色映射　　294\n15.2.9　自动保存图表　　295\n15.3　随机漫步　　295\n15.3.1　创建RandomWalk()类　　296\n15.3.2　选择方向　　296\n15.3.3　绘制随机漫步图　　297\n15.3.4　模拟多次随机漫步　　298\n15.3.5　设置随机漫步图的样式　　299\n15.3.6　给点着色　　299\n15.3.7　重新绘制起点和终点　　300\n15.3.8　隐藏坐标轴　　301\n15.3.9　增加点数　　301\n15.3.10　调整尺寸以适合屏幕　　302\n15.4　使用Pygal模拟掷骰子　　303\n15.4.1　安装Pygal　　304\n15.4.2　Pygal画廊　　304\n15.4.3　创建Die类　　304\n15.4.4　掷骰子　　305\n15.4.5　分析结果　　305\n15.4.6　绘制直方图　　306\n15.4.7　同时掷两个骰子　　307\n15.4.8　同时掷两个面数不同的骰子　　309\n15.5　小结　　311\n第16章　下载数据　　312\n16.1　CSV文件格式　　312\n16.1.1　分析CSV文件头　　313\n16.1.2　打印文件头及其位置　　314\n16.1.3　提取并读取数据　　314\n16.1.4　绘制气温图表　　315\n16.1.5　模块datetime　　316\n16.1.6　在图表中添加日期　　317\n16.1.7　涵盖更长的时间　　318\n16.1.8　再绘制一个数据系列　　319\n16.1.9　给图表区域着色　　320\n16.1.10　错误检查　　321\n16.2　制作世界人口地图：JSON格式　　324\n16.2.1　下载世界人口数据　　324\n16.2.2　提取相关的数据　　324\n16.2.3　将字符串转换为数字值　　326\n16.2.4　获取两个字母的国别码　　327\n16.2.5　制作世界地图　　329\n16.2.6　在世界地图上呈现数字数据　　330\n16.2.7　绘制完整的世界人口地图　　331\n16.2.8　根据人口数量将国家分组　　333\n16.2.9　使用Pygal设置世界地图的样式　　334\n16.2.10　加亮颜色主题　　335\n16.3　小结　　337\n第17章　使用API　　338\n17.1　使用Web API　　338\n17.1.1　Git和GitHub　　338\n17.1.2　使用API调用请求数据　　339\n17.1.3　安装requests　　339\n17.1.4　处理API响应　　340\n17.1.5　处理响应字典　　340\n17.1.6　概述最受欢迎的仓库　　342\n17.1.7　监视API的速率限制　　343\n17.2　使用Pygal可视化仓库　　344\n17.2.1　改进Pygal图表　　346\n17.2.2　添加自定义工具提示　　347\n17.2.3　根据数据绘图　　349\n17.2.4　在图表中添加可单击的链接　　350\n17.3　Hacker News API　　350\n17.4　小结　　353\n项目3 Web 应用程序　　354\n第18章　Django入门　　355\n18.1　建立项目　　355\n18.1.1　制定规范　　355\n18.1.2　建立虚拟环境　　356\n18.1.3　安装virtualenv　　356\n18.1.4　激活虚拟环境　　357\n18.1.5　安装Django　　357\n18.1.6　在Django中创建项目　　357\n18.1.7　创建数据库　　358\n18.1.8　查看项目　　359\n18.2　创建应用程序　　360\n18.2.1　定义模型　　360\n18.2.2　激活模型　　362\n18.2.3　Django管理网站　　363\n18.2.4　定义模型Entry　　365\n18.2.5　迁移模型Entry　　366\n18.2.6　向管理网站注册Entry　　366\n18.2.7　Django shell　　367\n18.3　创建网页：学习笔记主页　　369\n18.3.1　映射URL　　369\n18.3.2　编写视图　　371\n18.3.3　编写模板　　372\n18.4　创建其他网页　　373\n18.4.1　模板继承　　373\n18.4.2　显示所有主题的页面　　375\n18.4.3　显示特定主题的页面　　378\n18.5　小结　　381\n第19章　用户账户　　382\n19.1　让用户能够输入数据　　382\n19.1.1　添加新主题　　382\n19.1.2　添加新条目　　386\n19.1.3　编辑条目　　390\n19.2　创建用户账户　　392\n19.2.1　应用程序users　　393\n19.2.2　登录页面　　394\n19.2.3　注销　　396\n19.2.4　注册页面　　397\n19.3　让用户拥有自己的数据　　400\n19.3.1　使用@login_required限制访问　　400\n19.3.2　将数据关联到用户　　402\n19.3.3　只允许用户访问自己的主题　　405\n19.3.4　保护用户的主题　　405\n19.3.5　保护页面edit_entry　　406\n19.3.6　将新主题关联到当前用户　　406\n19.4　小结　　408\n第20章　设置应用程序的样式并对其进行部署　　409\n20.1　设置项目“学习笔记”的样式　　409\n20.1.1　应用程序django-bootstrap3　　410\n20.1.2　使用Bootstrap来设置项目“学习笔记”的样式　　411\n20.1.3　修改base.html　　411\n20.1.4　使用jumbotron设置主页的样式　　414\n20.1.5　设置登录页面的样式　　415\n20.1.6　设置new_topic页面的样式　　416\n20.1.7　设置topics页面的样式　　417\n20.1.8　设置topic页面中条目的样式　　417\n20.2　部署“学习笔记”　　419\n20.2.1　建立Heroku账户　　420\n20.2.2　安装Heroku Toolbelt　　420\n20.2.3　安装必要的包　　420\n20.2.4　创建包含包列表的文件requirements.txt　　421\n20.2.5　指定Python版本　　422\n20.2.6　为部署到Herohu而修改settings.py　　422\n20.2.7　创建启动进程的Procfile　　423\n20.2.8　为部署到Herohu而修改wsgi.py　　423\n20.2.9　创建用于存储静态文件的目录　　424\n20.2.10　在本地使用gunicorn服务器　　424\n20.2.11　使用Git跟踪项目文件　　425\n20.2.12　推送到Heroku　　426\n20.2.13　在Heroku上建立数据库　　427\n20.2.14　改进Heroku部署　　428\n20.2.15　确保项目的安全　　429\n20.2.16　提交并推送修改　　430\n20.2.17　创建自定义错误页面　　431\n20.2.18　继续开发　　434\n20.2.19　设置SECRET_KEY　　434\n20.2.20　将项目从Heroku删除　　434\n20.3　小结　　435\n附录A　安装Python　　436\n附录B　文本编辑器　　441\n附录C　寻求帮助　　447\n附录D　使用Git进行版本控制　　451\n后记　　460","pages":"459","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s28891775.jpg","large":"https://img3.doubanio.com\/lpic\/s28891775.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s28891775.jpg"},"alt":"https:\/\/book.douban.com\/subject\/26829016\/","id":"26829016","publisher":"人民邮电出版社","isbn10":"7115428026","isbn13":"9787115428028","title":"Python编程：从入门到实践","url":"https:\/\/api.douban.com\/v2\/book\/26829016","alt_title":"Python Crash Course","author_intro":"作者简介：\nEric Matthes\n高中科学和数学老师，现居住在阿拉斯加，在当地讲授Python入门课程。他从5岁开始就一直在编写程序。\n译者简介：\n袁国忠\n自由译者；2000年起专事翻译，主译图书，偶译新闻稿、软文；出版译著40余部，其中包括《C++ Prime Plus中文版》《CCNA学习指南》《CCNP ROUTE学习指南》《面向模式的软件架构：模式系统》《Android应用UI设计模式》《风投的选择：谁是下一个十亿美元级公司》等，总计700余万字；专事翻译前，从事过三年化工产品分析和开发，做过两年杂志和图书编辑。","summary":"本书是一本针对所有层次的Python 读者而作的Python 入门书。全书分两部分：第一部分介绍用Python 编程所必须了解的基本概念，包括matplotlib、NumPy 和Pygal 等强大的Python 库和工具介绍，以及列表、字典、if 语句、类、文件与异常、代码测试等内容；第二部分将理论付诸实践，讲解如何开发三个项目，包括简单的Python 2D 游戏开发如何利用数据生成交互式的信息图，以及创建和定制简单的Web 应用，并帮读者解决常见编程问题和困惑。","series":{"id":"660","title":"图灵程序设计丛书"},"price":"CNY 89.00"},{"rating":{"max":10,"numRaters":506,"average":"7.9","min":0},"subtitle":"Head First Python","author":["巴里（Barry.P.）"],"pubdate":"2012-3-1","tags":[{"count":419,"name":"python","title":"python"},{"count":266,"name":"编程","title":"编程"},{"count":237,"name":"Python","title":"Python"},{"count":148,"name":"计算机","title":"计算机"},{"count":94,"name":"程序设计","title":"程序设计"},{"count":69,"name":"Programming","title":"Programming"},{"count":51,"name":"计算机科学","title":"计算机科学"},{"count":42,"name":"IT","title":"IT"}],"origin_title":"","image":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27262723.jpg","binding":"平装","translator":["林琪 等"],"catalog":"引子\n1 初识Python:人人都爱列表\n2 共享你的代码：函数模块\n3 文件与异常：处理错误\n4 持久存储：数据保存到文件\n5 推导数据：处理数据！\n6 定制数据对象：打包代码与数据\n7 Web开发：集成在一起\n8 移动应用开发：小设备\n9 管理你的数据：处理输入\n10 扩展你的Web应用：来真格的\n11 处理复杂性：数据加工\nI 其他：（我们没有谈到的）十大问题\n索引","pages":"457","images":{"small":"https://img3.doubanio.com\/view\/subject\/s\/public\/s27262723.jpg","large":"https://img3.doubanio.com\/lpic\/s27262723.jpg","medium":"https://img3.doubanio.com\/view\/subject\/m\/public\/s27262723.jpg"},"alt":"https:\/\/book.douban.com\/subject\/10561367\/","id":"10561367","publisher":"中国电力出版社","isbn10":"7512322232","isbn13":"9787512322233","title":"Head First Python（中文版）","url":"https:\/\/api.douban.com\/v2\/book\/10561367","alt_title":"","author_intro":"Paul Barry最近发现他的编程生涯已近四分之一个世纪，这个事实着实让人有些震惊。在此期间，Paul使用过多种不同的编程语言编写程序，他在两个大洲的两个国家生活并工作过，并且娶妻生子，如今已经有3个孩子(当然……实际上孩子们都是他妻子在悉心照顾，不过Paul确实在他们身边)，另外他还攻读了计算机的学士和硕士学位，编写或合作编写了另外3本书，还为《LinuxJournal》(他是这家杂志的特约编辑)撰写了大量技术文章。","summary":"你想过可以通过一本书就学会Python吗？《Head First Python(中文版)》超越枯燥的语法和甩法手册，通过一种独特的方法教你学习这种语言。你会迅速掌握Python的基础知识，然后转向持久存储、异常处理、Web开发、SQLite、数据加工和lGoogle App Engine。你还将学习如何为Android编写移动应用，这都要归功于Python为你赋予的强大能力。本书会提供充分并且完备的学习体验，帮助你成为一名真正的Python程序员。    作者巴里觉得你的时间相当宝贵，不应当过多地花费在与新概念的纠缠之中。通过应用认知科学和学习理论的最新研究成果，《Head First Python(中文版)》可以让你投入一个需要多感官参与的学习体验，这本书采用丰富直观的形式使你的大脑真正开动起来，而不是长篇累牍地说教，让你昏昏欲睡。","series":{"id":"10044","title":"O'Reilly深入浅出系列"},"price":"68.00元"}]}